name: Site Build Pipeline

on:
  push:
    branches: [ main, developer ]
    paths:
      - 'site/**'
      - '.github/workflows/site.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'site/**'
      - '.github/workflows/site.yml'
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Deploy to GitHub Pages'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '20'
  SITE_DIR: 'site'

jobs:
  site-quality:
    name: Quality Assurance
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./site

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: site/package-lock.json

    - name: Install dependencies
      run: make install

    - name: Run ESLint
      run: make lint

    - name: Run TypeScript type check
      run: make type-check

    - name: Cache node_modules for build job
      uses: actions/cache@v4
      with:
        path: site/node_modules
        key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('site/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

  site-build:
    name: Build Site
    runs-on: ubuntu-latest
    needs: site-quality
    defaults:
      run:
        working-directory: ./site

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: site/package-lock.json

    - name: Restore node_modules cache
      uses: actions/cache@v4
      with:
        path: site/node_modules
        key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('site/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ env.NODE_VERSION }}-

    - name: Install dependencies (if cache miss)
      run: make install

    - name: Build site
      run: make build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: site-build-${{ github.sha }}
        path: site/dist/
        retention-days: 30

    - name: Generate build summary
      run: |
        echo "## 🏗️ Site Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Build completed successfully**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Build Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **Node.js Version**: ${{ env.NODE_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Build Directory**: \`site/dist/\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Artifacts:" >> $GITHUB_STEP_SUMMARY
        echo "- Build artifacts uploaded as: \`site-build-${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- Retention: 30 days" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        if [ -d "dist" ]; then
          echo "### Build Contents:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          ls -la dist/ >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Total files**: $(find dist -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "**Build size**: $(du -sh dist | cut -f1)" >> $GITHUB_STEP_SUMMARY
        fi

  site-deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: site-build
    if: |
      github.ref == 'refs/heads/main' &&
      (github.event_name == 'push' ||
       (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy == 'true'))

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: site-build-${{ github.sha }}
        path: ./dist

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

    - name: Generate deployment summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Site deployed successfully**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Deployment Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: github-pages" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed at**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "- 🌐 Visit the deployed site: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
        echo "- 📝 Update documentation if needed" >> $GITHUB_STEP_SUMMARY
        echo "- 🔍 Test the deployed site functionality" >> $GITHUB_STEP_SUMMARY
